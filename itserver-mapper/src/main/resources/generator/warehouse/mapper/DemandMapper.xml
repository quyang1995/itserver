<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="generator.warehouse.client.DemandMapper">
  <resultMap id="BaseResultMap" type="generator.warehouse.entity.Demand">
    <!--
      WARNING - @mbggenerated
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="feed_back_id" jdbcType="BIGINT" property="feedBackId" />
    <result column="relation_id" jdbcType="BIGINT" property="relationId" />
    <result column="relation_type" jdbcType="INTEGER" property="relationType" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="descp" jdbcType="VARCHAR" property="descp" />
    <result column="hope_date" jdbcType="TIMESTAMP" property="hopeDate" />
    <result column="callon_account_id" jdbcType="VARCHAR" property="callonAccountId" />
    <result column="callon_employee_code" jdbcType="BIGINT" property="callonEmployeeCode" />
    <result column="callon_employee_name" jdbcType="VARCHAR" property="callonEmployeeName" />
    <result column="callon_full_dept_path" jdbcType="VARCHAR" property="callonFullDeptPath" />
    <result column="drafted_account_id" jdbcType="VARCHAR" property="draftedAccountId" />
    <result column="drafted_employee_code" jdbcType="BIGINT" property="draftedEmployeeCode" />
    <result column="drafted_employee_name" jdbcType="VARCHAR" property="draftedEmployeeName" />
    <result column="drafted_full_dept_path" jdbcType="VARCHAR" property="draftedFullDeptPath" />
    <result column="cc_account" jdbcType="VARCHAR" property="ccAccount" />
    <result column="like_product" jdbcType="VARCHAR" property="likeProduct" />
    <result column="like_program" jdbcType="VARCHAR" property="likeProgram" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="channel" jdbcType="INTEGER" property="channel" />
    <result column="modified_account_id" jdbcType="VARCHAR" property="modifiedAccountId" />
    <result column="modified_name" jdbcType="VARCHAR" property="modifiedName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modified_time" jdbcType="TIMESTAMP" property="modifiedTime" />
    <result column="feedback_phone" jdbcType="VARCHAR" property="feedbackPhone" />
    <result column="feedback_name" jdbcType="VARCHAR" property="feedbackName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
    -->
    id, feed_back_id, relation_id, relation_type, name, descp, hope_date, callon_account_id, 
    callon_employee_code, callon_employee_name, callon_full_dept_path, drafted_account_id, 
    drafted_employee_code, drafted_employee_name, drafted_full_dept_path, cc_account, 
    like_product, like_program, level, status, channel, modified_account_id, modified_name, 
    create_time, modified_time, feedback_phone, feedback_name
  </sql>
  <select id="selectByExample" parameterType="generator.warehouse.entity.DemandExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from demand
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="generator.warehouse.entity.DemandExample">
    <!--
      WARNING - @mbggenerated
    -->
    delete from demand
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="generator.warehouse.entity.DemandExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
    -->
    select count(*) from demand
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
    -->
    update demand
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.feedBackId != null">
        feed_back_id = #{record.feedBackId,jdbcType=BIGINT},
      </if>
      <if test="record.relationId != null">
        relation_id = #{record.relationId,jdbcType=BIGINT},
      </if>
      <if test="record.relationType != null">
        relation_type = #{record.relationType,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.descp != null">
        descp = #{record.descp,jdbcType=VARCHAR},
      </if>
      <if test="record.hopeDate != null">
        hope_date = #{record.hopeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.callonAccountId != null">
        callon_account_id = #{record.callonAccountId,jdbcType=VARCHAR},
      </if>
      <if test="record.callonEmployeeCode != null">
        callon_employee_code = #{record.callonEmployeeCode,jdbcType=BIGINT},
      </if>
      <if test="record.callonEmployeeName != null">
        callon_employee_name = #{record.callonEmployeeName,jdbcType=VARCHAR},
      </if>
      <if test="record.callonFullDeptPath != null">
        callon_full_dept_path = #{record.callonFullDeptPath,jdbcType=VARCHAR},
      </if>
      <if test="record.draftedAccountId != null">
        drafted_account_id = #{record.draftedAccountId,jdbcType=VARCHAR},
      </if>
      <if test="record.draftedEmployeeCode != null">
        drafted_employee_code = #{record.draftedEmployeeCode,jdbcType=BIGINT},
      </if>
      <if test="record.draftedEmployeeName != null">
        drafted_employee_name = #{record.draftedEmployeeName,jdbcType=VARCHAR},
      </if>
      <if test="record.draftedFullDeptPath != null">
        drafted_full_dept_path = #{record.draftedFullDeptPath,jdbcType=VARCHAR},
      </if>
      <if test="record.ccAccount != null">
        cc_account = #{record.ccAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.likeProduct != null">
        like_product = #{record.likeProduct,jdbcType=VARCHAR},
      </if>
      <if test="record.likeProgram != null">
        like_program = #{record.likeProgram,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null">
        level = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.channel != null">
        channel = #{record.channel,jdbcType=INTEGER},
      </if>
      <if test="record.modifiedAccountId != null">
        modified_account_id = #{record.modifiedAccountId,jdbcType=VARCHAR},
      </if>
      <if test="record.modifiedName != null">
        modified_name = #{record.modifiedName,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifiedTime != null">
        modified_time = #{record.modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.feedbackPhone != null">
        feedback_phone = #{record.feedbackPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.feedbackName != null">
        feedback_name = #{record.feedbackName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
    -->
    update demand
    set id = #{record.id,jdbcType=BIGINT},
      feed_back_id = #{record.feedBackId,jdbcType=BIGINT},
      relation_id = #{record.relationId,jdbcType=BIGINT},
      relation_type = #{record.relationType,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      descp = #{record.descp,jdbcType=VARCHAR},
      hope_date = #{record.hopeDate,jdbcType=TIMESTAMP},
      callon_account_id = #{record.callonAccountId,jdbcType=VARCHAR},
      callon_employee_code = #{record.callonEmployeeCode,jdbcType=BIGINT},
      callon_employee_name = #{record.callonEmployeeName,jdbcType=VARCHAR},
      callon_full_dept_path = #{record.callonFullDeptPath,jdbcType=VARCHAR},
      drafted_account_id = #{record.draftedAccountId,jdbcType=VARCHAR},
      drafted_employee_code = #{record.draftedEmployeeCode,jdbcType=BIGINT},
      drafted_employee_name = #{record.draftedEmployeeName,jdbcType=VARCHAR},
      drafted_full_dept_path = #{record.draftedFullDeptPath,jdbcType=VARCHAR},
      cc_account = #{record.ccAccount,jdbcType=VARCHAR},
      like_product = #{record.likeProduct,jdbcType=VARCHAR},
      like_program = #{record.likeProgram,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      channel = #{record.channel,jdbcType=INTEGER},
      modified_account_id = #{record.modifiedAccountId,jdbcType=VARCHAR},
      modified_name = #{record.modifiedName,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modified_time = #{record.modifiedTime,jdbcType=TIMESTAMP},
      feedback_phone = #{record.feedbackPhone,jdbcType=VARCHAR},
      feedback_name = #{record.feedbackName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>