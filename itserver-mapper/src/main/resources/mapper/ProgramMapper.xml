<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.longfor.itserver.mapper.ProgramMapper">
  <resultMap id="BaseResultMap" type="com.longfor.itserver.entity.Program">
    <!--
      WARNING - @mbggenerated
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="product_id" jdbcType="BIGINT" property="productId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="descp" jdbcType="VARCHAR" property="descp" />
    <result column="commit_date" jdbcType="TIMESTAMP" property="commitDate" />
    <result column="start_date" jdbcType="TIMESTAMP" property="startDate" />
    <result column="gray_release_date" jdbcType="TIMESTAMP" property="grayReleaseDate" />
    <result column="release_date" jdbcType="TIMESTAMP" property="releaseDate" />
    <result column="like_product" jdbcType="VARCHAR" property="likeProduct" />
    <result column="like_program" jdbcType="VARCHAR" property="likeProgram" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="program_status" jdbcType="INTEGER" property="programStatus" />
    <result column="modified_account_id" jdbcType="VARCHAR" property="modifiedAccountId" />
    <result column="modified_name" jdbcType="VARCHAR" property="modifiedName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modified_time" jdbcType="TIMESTAMP" property="modifiedTime" />
  </resultMap>

  <resultMap id="ProgramResultMap" type="com.longfor.itserver.entity.ps.PsProgram">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
  </resultMap>

  <resultMap id="ProgramDetailResultMap" extends="BaseResultMap" type="com.longfor.itserver.entity.ps.PsProgramDetail">

  </resultMap>

  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
    -->
    id, product_id, name, descp, commit_date, start_date, gray_release_date, release_date, 
    like_product, like_program, type, program_status, modified_account_id, modified_name, 
    create_time, modified_time
  </sql>

  <!-- 项目列表 -->
  <select id="programList" parameterType="map" resultMap="BaseResultMap">
    SELECT DISTINCT
    p.id, p.product_id, p.name, p.descp, p.commit_date, p.start_date, p.gray_release_date, p.release_date,
    p.like_product, p.like_program, p.type, p.program_status, p.modified_account_id, p.modified_name,
    p.create_time, p.modified_time,pe.account_id,pe.employee_name
    FROM program p LEFT JOIN program_employee pe ON p.id = pe.program_id
    WHERE
    <if test='isPart == 0'>
      (pe.account_id = #{accountId, jdbcType=VARCHAR} OR p.type = 1)
    </if>
    <if test='isPart == 1'>
      pe.account_id = #{accountId, jdbcType=VARCHAR}
    </if>
    <if test='programStatus != "" and programStatus != null'>
      and p.program_status = #{programStatus}
    </if>
    <if test='searchText != "" and searchText != null'>
      and (p.name like concat(concat('%',#{searchText}),'%') OR pe.employee_name like concat(concat('%',#{searchText}),'%'))
    </if>
  </select>

  <!-- 项目列表模糊搜索返回20条 -->
  <select id="programLimitList" parameterType="map" resultMap="BaseResultMap">
    SELECT * FROM program
      WHERE name LIKE CONCAT('%', #{name, jdbcType=VARCHAR}, '%')
      LIMIT 0, 20
  </select>

  <!-- 查询关联项目 -->
  <select id="inProgramId" parameterType="java.lang.String" resultMap="ProgramResultMap">
    SELECT id,name FROM program
    WHERE id IN (${_parameter})
  </select>

  <!-- 通过ID查询项目 -->
  <select id="getProgramId" parameterType="java.lang.Long" resultMap="ProgramDetailResultMap">
    SELECT * FROM program WHERE id = #{id}
  </select>
</mapper>