<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.longfor.itserver.mapper.ProductMapper">
    <resultMap id="BaseResultMap" type="com.longfor.itserver.entity.Product">
        <!--
          WARNING - @mbggenerated
        -->
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="code" jdbcType="VARCHAR" property="code" />
        <result column="descp" property="descp" jdbcType="VARCHAR"/>
        <result column="contact_account_id" property="contactAccountId" jdbcType="VARCHAR"/>
        <result column="contact_employee_code" property="contactEmployeeCode" jdbcType="BIGINT"/>
        <result column="contact_employee_name" property="contactEmployeeName" jdbcType="VARCHAR"/>
        <result column="contact_full_dept_path" property="contactFullDeptPath" jdbcType="VARCHAR"/>
        <result column="like_program" property="likeProgram" jdbcType="VARCHAR"/>
        <result column="type" property="type" jdbcType="INTEGER"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="modified_account_id" property="modifiedAccountId" jdbcType="VARCHAR"/>
        <result column="modified_name" property="modifiedName" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="modified_time" property="modifiedTime" jdbcType="TIMESTAMP"/>
        <result column="new_code" property="newCode" jdbcType="VARCHAR"/>
        <result column="analyzing_conditions" property="analyzingConditions" jdbcType="VARCHAR"/>
        <result column="contact_account_id1" property="contactAccountId1" jdbcType="VARCHAR"/>
        <result column="contact_employee_code1" property="contactEmployeeCode1" jdbcType="BIGINT"/>
        <result column="contact_employee_name1" property="contactEmployeeName1" jdbcType="VARCHAR"/>
        <result column="contact_full_dept_path1" property="contactFullDeptPath1" jdbcType="VARCHAR"/>
        <result column="logo" property="logo" jdbcType="VARCHAR"/>
        <result column="is_top" property="isTop" jdbcType="VARCHAR"/>
        <result column="label" property="label" jdbcType="VARCHAR"/>
        <result column="pc_url" property="pcUrl" jdbcType="VARCHAR"/>
        <result column="h5_url" property="h5Url" jdbcType="VARCHAR"/>
        <result column="ios_url" property="iosUrl" jdbcType="VARCHAR"/>
        <result column="android_url" property="androidUrl" jdbcType="VARCHAR"/>
        <result column="pc_qrcode" property="pcQrCode" jdbcType="VARCHAR"/>
        <result column="h5_qrcode" property="h5QrCode" jdbcType="VARCHAR"/>
        <result column="ios_qrcode" property="iosQrCode" jdbcType="VARCHAR"/>
        <result column="android_qrcode" property="androidQrCode" jdbcType="VARCHAR"/>
    </resultMap>


    <resultMap id="CountBaseResultMap" extends="BaseResultMap" type="com.longfor.itserver.entity.ps.PsProductCount">
        <result column="programCount" property="programCount" jdbcType="VARCHAR"/>
        <result column="newestProgramName" property="newestProgramName" jdbcType="VARCHAR"/>
        <result column="programStatus" property="programStatus" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="LikeBaseResultMap" type="com.longfor.itserver.entity.ps.PsProduct">
        <!--
          WARNING - @mbggenerated
        -->
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="type" property="type" jdbcType="INTEGER"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
    </resultMap>

    <resultMap id="ApiBaseResultMap" type="com.longfor.itserver.entity.ps.PsAPIProduct">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="pending" property="pending" jdbcType="BIGINT"/>
        <result column="working" property="working" jdbcType="BIGINT"/>
        <result column="complete" property="complete" jdbcType="BIGINT"/>
        <result column="analyzingConditions" property="analyzingConditions" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
        -->
        id, name, code, descp, contact_account_id, contact_employee_code, contact_employee_name,
        contact_full_dept_path, like_program, type, status, modified_account_id, modified_name,
        create_time, modified_time, new_code, analyzing_conditions,contact_account_id1,contact_employee_code1,
        contact_employee_name1,contact_full_dept_path1,logo,is_top,label,pc_url,h5_url,ios_url,android_url,
        pc_qrcode,h5_qrcode,ios_qrcode,android_qrcode
    </sql>
    <select id="selectList" parameterType="map" resultMap="CountBaseResultMap">
        SELECT DISTINCT ta.*,
        (select IFNULL(sum(CASE WHEN p.product_id =ta.id THEN 1 ELSE 0 END),0) from program p) AS programCount,
        (select name from program a  where a.product_id =ta.id ORDER BY create_time desc LIMIT 0,1 ) AS newestProgramName
        FROM product ta LEFT JOIN product_employee tb ON ta.id = tb.product_id
        WHERE 1=1
        <if test="isAdmin == 1">
            <if test="mySelf != null and mySelf != '' and mySelf == 1">
                AND (tb.account_id = #{accountId}
                OR ta.contact_account_id = #{accountId})
            </if>
        </if>
        <if test="isAdmin == 0">
            <if test="mySelf != null and mySelf != '' and mySelf == 0">
                AND (tb.account_id = #{accountId}
                OR ta.contact_account_id = #{accountId}
                OR ta.type=1)
            </if>
            <if test="mySelf != null and mySelf != '' and mySelf == 1">
                AND (tb.account_id = #{accountId}
                OR ta.contact_account_id = #{accountId})
            </if>
        </if>
        <if test="status != null and status != '' and status != -1 ">
            AND ta.status= #{status}
        </if>
        <if test="searchText != null and searchText != ''">
            AND (tb.employee_name LIKE concat('%',#{searchText},'%') OR ta.name LIKE concat('%',#{searchText},'%') OR
            ta.contact_employee_name LIKE concat('%',#{searchText},'%'))
        </if>
        <if test="analyzingConditions != null and analyzingConditions != '' and analyzingConditions != -1">
            AND ta.analyzing_conditions LIKE concat('%',#{analyzingConditions},'%')
        </if>
        ORDER BY ta.create_time DESC
    </select>

    <!--获取产品列表带各状态统计-->
    <select id="productCountList" parameterType="map" resultMap="ApiBaseResultMap">
        SELECT DISTINCT ta.id,ta.`name`,ta.analyzing_conditions as analyzingConditions,
        (select IFNULL(sum(CASE WHEN d.relation_id =ta.id THEN 1 ELSE 0 END),0) from demand d where d.relation_type=1
        and `status`=2)+
        (select IFNULL(sum(CASE WHEN b.relation_id =ta.id THEN 1 ELSE 0 END),0) from bug_info b where b.relation_type=1
        and `status`=2)+
        (select IFNULL(sum(CASE WHEN p.product_id =ta.id THEN 1 ELSE 0 END),0) from program p
        LEFT JOIN demand d ON d.relation_id = p.id and d.relation_type=2 where d.`status`=2)+
        (select IFNULL(sum(CASE WHEN p.product_id =ta.id THEN 1 ELSE 0 END),0) from program p
        LEFT JOIN bug_info b ON b.relation_id = p.id and b.relation_type=2 where b.`status`=2) as pending,
        (select IFNULL(sum(CASE WHEN d.relation_id =ta.id THEN 1 ELSE 0 END),0) from demand d where d.relation_type=1
        and `status`=3)+
        (select IFNULL(sum(CASE WHEN b.relation_id =ta.id THEN 1 ELSE 0 END),0) from bug_info b where b.relation_type=1
        and `status`=3)+
        (select IFNULL(sum(CASE WHEN p.product_id =ta.id THEN 1 ELSE 0 END),0) from program p
        LEFT JOIN demand d ON d.relation_id = p.id and d.relation_type=2 where d.`status`=3)+
        (select IFNULL(sum(CASE WHEN p.product_id =ta.id THEN 1 ELSE 0 END),0) from program p
        LEFT JOIN bug_info b ON b.relation_id = p.id and b.relation_type=2 where b.`status`=3) as working,
        (select IFNULL(sum(CASE WHEN d.relation_id =ta.id THEN 1 ELSE 0 END),0) from demand d where d.relation_type=1
        and `status`=4)+
        (select IFNULL(sum(CASE WHEN b.relation_id =ta.id THEN 1 ELSE 0 END),0) from bug_info b where b.relation_type=1
        and `status`=4)+
        (select IFNULL(sum(CASE WHEN p.product_id =ta.id THEN 1 ELSE 0 END),0) from program p
        LEFT JOIN demand d ON d.relation_id = p.id and d.relation_type=2 where d.`status`=4)+
        (select IFNULL(sum(CASE WHEN p.product_id =ta.id THEN 1 ELSE 0 END),0) from program p
        LEFT JOIN bug_info b ON b.relation_id = p.id and b.relation_type=2 where b.`status`=4) as complete
        FROM product ta
        LEFT JOIN product_employee tb ON ta.id = tb.product_id
        WHERE 1=1
        <if test="isAdmin == 1">
            <if test="mySelf != null and mySelf != '' and mySelf == 1">
                AND (tb.account_id = #{accountId}
                OR ta.contact_account_id = #{accountId})
            </if>
        </if>
        <if test="isAdmin == 0">
            <if test="mySelf != null and mySelf != '' and mySelf == 0">
                AND (tb.account_id = #{accountId}
                OR ta.contact_account_id = #{accountId}
                OR ta.type=1)
            </if>
            <if test="mySelf != null and mySelf != '' and mySelf == 1">
                AND (tb.account_id = #{accountId}
                OR ta.contact_account_id = #{accountId})
            </if>
        </if>
        <if test="status != null and status != '' and status != -1 ">
            AND ta.status= #{status}
        </if>
        ORDER BY ta.create_time DESC
    </select>

    <select id="selectLikeList" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM product
        WHERE 1=1
        <if test="name != null and name != ''">
            and name LIKE concat('%',#{name},'%')
        </if>
        ORDER BY create_time DESC
        limit 0,20
    </select>

    <!-- 产品列表A-Z排序 -->
    <select id="getListSort" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM product
        ORDER by convert(substr(name,1,1) using 'GBK')
    </select>

    <select id="selectIdList" resultMap="LikeBaseResultMap">
        SELECT
            ID,
            NAME,
            type,
            status
        FROM product
        WHERE ID IN (${_parameter})
    </select>

    <select id="getNewCode" resultType="String">
        SELECT  code FROM product ORDER BY create_time DESC LIMIT 0,1
    </select>

    <select id="getListByLikeAnalyzingConditions" resultMap="BaseResultMap" parameterType="map">
        SELECT
        id
        FROM product
        <where>
            <if test=" analyzingConditions != null and analyzingConditions != '' and analyzingConditions != -1">
                analyzing_conditions like concat('%',#{analyzingConditions},'%')
            </if>

            <if test=" type == 1 ">
                and date_format(create_time,'%Y-%m')=date_format(now(),'%Y-%m')
            </if>

            <if test=" type == 2 ">
                and id in (select product_id from program
                            where program_status != 100 and program_status != 900 and program_status != 999)
            </if>
        </where>

    </select>

    <sql id="productHui_Where">
        <if test=" analyzingConditions != null and analyzingConditions != '' and analyzingConditions != -1">
            and p.analyzing_conditions like concat('%',#{analyzingConditions},'%')
        </if>
        <if test=" searchText != null and searchText != '' ">
            and p.name like concat('%',#{searchText},'%')
        </if>
        <if test=" label != null and label != '' ">
            and p.label like concat('%',#{label},'%')
        </if>
    </sql>

    <select id="productHui" resultMap="CountBaseResultMap" parameterType="map">
        <if test="status == 0">
            SELECT p.*,pro.program_status as programStatus FROM product p
            LEFT JOIN (SELECT id,product_id,program_status from program GROUP BY product_id) pro on pro.product_id=p.id
            where p.is_top=1   /** 置顶*/
            <include refid="productHui_Where"/>
        </if>
        <if test="status == 1">
            select p.*,pro.program_status as programStatus from product p
            LEFT JOIN (SELECT id,product_id,program_status from program GROUP BY product_id) pro on pro.product_id=p.id
            WHERE p.`status`=1 and p.is_top=0 /** 已上线*/
            <include refid="productHui_Where"/>
        </if>
        <if test="status == 2">
            select p.*,pro.program_status as programStatus from product p
            LEFT JOIN (SELECT id,product_id,program_status from program GROUP BY product_id) pro on pro.product_id=p.id
            WHERE p.`status`=2 and p.is_top=0 and pro.program_status!=100/** 9步法*/
            <if test="status == 2 and programStatus != null and programStatus != ''">
                and pro.program_status= #{programStatus}
            </if>
            <include refid="productHui_Where"/>
        </if>
        <if test="status == 3">
            select p.*,pro.program_status as programStatus from product p
            LEFT JOIN (SELECT id,product_id,program_status from program GROUP BY product_id) pro on pro.product_id=p.id
            WHERE p.`status`=2 and p.is_top=0 and pro.program_status=100/** 待立项*/
            <include refid="productHui_Where"/>
        </if>
        <if test="status == 4">
            select p.*,pro.program_status as programStatus from product p
            LEFT JOIN (SELECT id,product_id,program_status from program GROUP BY product_id) pro on pro.product_id=p.id
            WHERE p.`status`=0 and p.is_top=0 /** 已下线*/
            <include refid="productHui_Where"/>
        </if>
        <if test="status == -1">
            SELECT p.*,pro.program_status as programStatus FROM product p
            LEFT JOIN (SELECT id,product_id,program_status from program GROUP BY product_id) pro on pro.product_id=p.id
            where p.is_top=1   /** 置顶*/
            <include refid="productHui_Where"/>
            UNION ALL

            select p.*,pro.program_status as programStatus from product p
            LEFT JOIN (SELECT id,product_id,program_status from program GROUP BY product_id) pro on pro.product_id=p.id
            WHERE p.`status`=1 and p.is_top=0 /** 已上线*/
            <include refid="productHui_Where"/>
            UNION ALL

            select p.*,pro.program_status as programStatus from product p
            LEFT JOIN (SELECT id,product_id,program_status from program GROUP BY product_id) pro on pro.product_id=p.id
            WHERE p.`status`=2 and p.is_top=0 and pro.program_status!=100/** 9步法*/
            <include refid="productHui_Where"/>
            UNION ALL

            select p.*,pro.program_status as programStatus from product p
            LEFT JOIN (SELECT id,product_id,program_status from program GROUP BY product_id) pro on pro.product_id=p.id
            WHERE p.`status`=2 and p.is_top=0 and (pro.program_status=100 or pro.program_status is null)/** 待立项*/
            <include refid="productHui_Where"/>
            UNION ALL

            select p.*,pro.program_status as programStatus from product p
            LEFT JOIN (SELECT id,product_id,program_status from program GROUP BY product_id) pro on pro.product_id=p.id
            WHERE p.`status`=0 and p.is_top=0 /** 已下线*/
            <include refid="productHui_Where"/>
        </if>
        ORDER BY is_top desc,field(`status`,1,2,0),programStatus desc,create_time desc
        LIMIT #{startRow},#{endRow}
    </select>

    <select id="productHuiNum" resultType="int" parameterType="map">
        <if test="status == 0">
            SELECT COUNT(1) FROM product p
            LEFT JOIN (SELECT id,product_id,program_status from program GROUP BY product_id) pro on pro.product_id=p.id
            where p.is_top=1   /** 置顶*/
            <include refid="productHui_Where"/>
        </if>
        <if test="status == 1">
            select COUNT(1) from product p
            LEFT JOIN (SELECT id,product_id,program_status from program GROUP BY product_id) pro on pro.product_id=p.id
            WHERE p.`status`=1 and p.is_top=0 /** 已上线*/
            <include refid="productHui_Where"/>
        </if>
        <if test="status == 2">
            select COUNT(1) from product p
            LEFT JOIN (SELECT id,product_id,program_status from program GROUP BY product_id) pro on pro.product_id=p.id
            WHERE p.`status`=2 and p.is_top=0 and pro.program_status!=100/** 9步法*/
            <if test="status == 2 and programStatus != null and programStatus != ''">
                and pro.program_status= #{programStatus}
            </if>
            <include refid="productHui_Where"/>
        </if>
        <if test="status == 3">
            select COUNT(1) from product p
            LEFT JOIN (SELECT id,product_id,program_status from program GROUP BY product_id) pro on pro.product_id=p.id
            WHERE p.`status`=2 and p.is_top=0 and pro.program_status=100/** 待立项*/
            <include refid="productHui_Where"/>
        </if>
        <if test="status == 4">
            select COUNT(1) from product p
            LEFT JOIN (SELECT id,product_id,program_status from program GROUP BY product_id) pro on pro.product_id=p.id
            WHERE p.`status`=0 and p.is_top=0 /** 已下线*/
            <include refid="productHui_Where"/>
        </if>
        <if test="status == -1">
            SELECT COUNT(1) from product p
            where 1=1
            <include refid="productHui_Where"/>
        </if>
    </select>
</mapper>