<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.longfor.itserver.mapper.ProductMapper">
    <resultMap id="BaseResultMap" type="com.longfor.itserver.entity.Product">
        <!--
          WARNING - @mbggenerated
        -->
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="code" jdbcType="VARCHAR" property="code" />
        <result column="descp" property="descp" jdbcType="VARCHAR"/>
        <result column="contact_account_id" property="contactAccountId" jdbcType="VARCHAR"/>
        <result column="contact_employee_code" property="contactEmployeeCode" jdbcType="BIGINT"/>
        <result column="contact_employee_name" property="contactEmployeeName" jdbcType="VARCHAR"/>
        <result column="contact_full_dept_path" property="contactFullDeptPath" jdbcType="VARCHAR"/>
        <result column="like_program" property="likeProgram" jdbcType="VARCHAR"/>
        <result column="type" property="type" jdbcType="INTEGER"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="modified_account_id" property="modifiedAccountId" jdbcType="VARCHAR"/>
        <result column="modified_name" property="modifiedName" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="modified_time" property="modifiedTime" jdbcType="TIMESTAMP"/>
        <result column="new_code" property="newCode" jdbcType="VARCHAR"/>
        <result column="analyzing_conditions" property="analyzingConditions" jdbcType="VARCHAR"/>
        <result column="contact_account_id1" property="contactAccountId1" jdbcType="VARCHAR"/>
        <result column="contact_employee_code1" property="contactEmployeeCode1" jdbcType="BIGINT"/>
        <result column="contact_employee_name1" property="contactEmployeeName1" jdbcType="VARCHAR"/>
        <result column="contact_full_dept_path1" property="contactFullDeptPath1" jdbcType="VARCHAR"/>
        <result column="logo" property="logo" jdbcType="VARCHAR"/>
        <result column="is_top" property="isTop" jdbcType="VARCHAR"/>
        <result column="label" property="label" jdbcType="VARCHAR"/>
        <result column="pc_url" property="pcUrl" jdbcType="VARCHAR"/>
        <result column="h5_url" property="h5Url" jdbcType="VARCHAR"/>
        <result column="ios_url" property="iosUrl" jdbcType="VARCHAR"/>
        <result column="android_url" property="androidUrl" jdbcType="VARCHAR"/>
        <result column="label_name" property="labelName" jdbcType="VARCHAR"/>
        <result column="windows_url" property="windowsUrl" jdbcType="VARCHAR"/>
        <result column="mac_url" property="macUrl" jdbcType="VARCHAR"/>
        <result column="ios_version" property="iosVersion" jdbcType="VARCHAR"/>
        <result column="android_version" property="androidVersion" jdbcType="VARCHAR"/>
        <result column="ios_modified_time" property="iosModifiedTime" jdbcType="TIMESTAMP"/>
        <result column="android_modified_time" property="androidModifiedTime" jdbcType="TIMESTAMP"/>
        <result column="ios_url_test" property="iosUrlTest" jdbcType="VARCHAR"/>
        <result column="android_url_test" property="androidUrlTest" jdbcType="VARCHAR"/>
        <result column="ios_version_test" property="iosVersionTest" jdbcType="VARCHAR"/>
        <result column="android_version_test" property="androidVersionTest" jdbcType="VARCHAR"/>
        <result column="ios_modified_time_test" property="iosModifiedTimeTest" jdbcType="TIMESTAMP"/>
        <result column="android_modified_time_test" property="androidModifiedTimeTest" jdbcType="TIMESTAMP"/>
    </resultMap>


    <resultMap id="CountBaseResultMap" extends="BaseResultMap" type="com.longfor.itserver.entity.ps.PsProductCount">
        <result column="programCount" property="programCount" jdbcType="VARCHAR"/>
        <result column="newestProgramName" property="newestProgramName" jdbcType="VARCHAR"/>
        <result column="programStatus" property="programStatus" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="LikeBaseResultMap" type="com.longfor.itserver.entity.ps.PsProduct">
        <!--
          WARNING - @mbggenerated
        -->
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="type" property="type" jdbcType="INTEGER"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
    </resultMap>

    <resultMap id="ApiBaseResultMap" type="com.longfor.itserver.entity.ps.PsAPIProduct">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="pending" property="pending" jdbcType="BIGINT"/>
        <result column="working" property="working" jdbcType="BIGINT"/>
        <result column="complete" property="complete" jdbcType="BIGINT"/>
        <result column="analyzingConditions" property="analyzingConditions" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
        -->
        id, name, code, descp, contact_account_id, contact_employee_code, contact_employee_name,
        contact_full_dept_path, like_program, type, status, modified_account_id, modified_name,
        create_time, modified_time, new_code, analyzing_conditions,contact_account_id1,contact_employee_code1,
        contact_employee_name1,contact_full_dept_path1,logo,is_top,label,pc_url,h5_url,ios_url,android_url,
        label_name,windows_url,mac_url,ios_version,android_version,ios_modified_time,android_modified_time,
        ios_url_test,android_url_test,ios_version_test,android_version_test,ios_modified_time_test,android_modified_time_test
    </sql>
    <select id="selectList" parameterType="map" resultMap="CountBaseResultMap">
        SELECT DISTINCT ta.*,
        (select IFNULL(sum(CASE WHEN p.product_id =ta.id THEN 1 ELSE 0 END),0) from program p) AS programCount,
        (select name from program a  where a.product_id =ta.id ORDER BY create_time desc LIMIT 0,1 ) AS newestProgramName
        FROM product ta LEFT JOIN product_employee tb ON ta.id = tb.product_id
        WHERE 1=1
        <if test="isAdmin == 1">
            <if test="mySelf != null and mySelf != '' and mySelf == 1">
                AND (tb.account_id = #{accountId}
                OR ta.contact_account_id = #{accountId})
            </if>
        </if>
        <if test="isAdmin == 0">
            <if test="mySelf != null and mySelf != '' and mySelf == 0">
                AND (tb.account_id = #{accountId}
                OR ta.contact_account_id = #{accountId}
                OR ta.type=1)
            </if>
            <if test="mySelf != null and mySelf != '' and mySelf == 1">
                AND (tb.account_id = #{accountId}
                OR ta.contact_account_id = #{accountId})
            </if>
        </if>
        <if test="status != null and status != '' and status != -1 ">
            AND ta.status= #{status}
        </if>
        <if test="label != null and label != '' and label != ',-1,' ">
            AND ta.label  LIKE concat('%',#{label},'%')
        </if>
        <if test="searchText != null and searchText != ''">
            AND (tb.employee_name LIKE concat('%',#{searchText},'%') OR ta.name LIKE concat('%',#{searchText},'%') OR
            ta.contact_employee_name LIKE concat('%',#{searchText},'%') OR ta.label LIKE concat('%',#{searchText},'%'))
        </if>
        <if test="analyzingConditions != null and analyzingConditions != '' and analyzingConditions != -1">
            AND ta.analyzing_conditions LIKE concat('%',#{analyzingConditions},'%')
        </if>
        ORDER BY ta.create_time DESC
    </select>

    <select id="exportList" parameterType="map" resultType="map">
        SELECT
        ta.id,
        ta.`name`,
        ta.CODE code,
        CASE
        WHEN ta.type = 0 THEN  '私有'
        WHEN ta.type = 1 THEN  '公开'
        ELSE '' END type,
        CASE
        WHEN ta.`status` = 0 THEN  '已下线'
        WHEN ta.`status` = 1 THEN  '已上线'
        WHEN ta.`status` = 2 THEN  '待上线'
        ELSE '' END status,
        ta.analyzing_conditions analyzingConditions,
        REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(analyzing_conditions,'1','地产系统相关'),'2','商业系统相关'),'3','数据系统相关'),'4','冠寓系统相关'),'5','养老系统相关'),'6','产城系统相关'),'7','基础中心系统相关') anaName,
        GROUP_CONCAT(tb.employee_name) employeeName,
        substring(ta.create_time,1,10) createTime
        FROM
        product ta
        LEFT JOIN product_employee tb ON ta.id = tb.product_id and tb.employee_type = 1
        WHERE 1=1
        <if test="isAdmin == 1">
            <if test="mySelf != null and mySelf != '' and mySelf == 1">
                AND (tb.account_id = #{accountId}
                OR ta.contact_account_id = #{accountId})
            </if>
        </if>
        <if test="isAdmin == 0">
            <if test="mySelf != null and mySelf != '' and mySelf == 0">
                AND (tb.account_id = #{accountId}
                OR ta.contact_account_id = #{accountId}
                OR ta.type=1)
            </if>
            <if test="mySelf != null and mySelf != '' and mySelf == 1">
                AND (tb.account_id = #{accountId}
                OR ta.contact_account_id = #{accountId})
            </if>
        </if>
        <if test="status != null and status != '' and status != -1 ">
            AND ta.status= #{status}
        </if>
        <if test="label != null and label != '' and label != ',-1,' ">
            AND ta.label  LIKE concat('%',#{label},'%')
        </if>
        <if test="searchText != null and searchText != ''">
            AND (tb.employee_name LIKE concat('%',#{searchText},'%') OR ta.name LIKE concat('%',#{searchText},'%') OR
            ta.contact_employee_name LIKE concat('%',#{searchText},'%') OR ta.label LIKE concat('%',#{searchText},'%'))
        </if>
        <if test="analyzingConditions != null and analyzingConditions != '' and analyzingConditions != -1">
            AND ta.analyzing_conditions LIKE concat('%',#{analyzingConditions},'%')
        </if>
        GROUP BY ta.id
        ORDER BY ta.create_time DESC
    </select>

    <!--获取产品列表带各状态统计-->
    <select id="productCountList" parameterType="map" resultMap="ApiBaseResultMap">
        SELECT DISTINCT ta.id,ta.`name`,ta.analyzing_conditions as analyzingConditions,
        (select IFNULL(sum(CASE WHEN d.relation_id =ta.id THEN 1 ELSE 0 END),0) from demand d where d.relation_type=1
        and `status`=2)+
        (select IFNULL(sum(CASE WHEN b.relation_id =ta.id THEN 1 ELSE 0 END),0) from bug_info b where b.relation_type=1
        and `status`=2)+
        (select IFNULL(sum(CASE WHEN p.product_id =ta.id THEN 1 ELSE 0 END),0) from program p
        LEFT JOIN demand d ON d.relation_id = p.id and d.relation_type=2 where d.`status`=2)+
        (select IFNULL(sum(CASE WHEN p.product_id =ta.id THEN 1 ELSE 0 END),0) from program p
        LEFT JOIN bug_info b ON b.relation_id = p.id and b.relation_type=2 where b.`status`=2) as pending,
        (select IFNULL(sum(CASE WHEN d.relation_id =ta.id THEN 1 ELSE 0 END),0) from demand d where d.relation_type=1
        and `status`=3)+
        (select IFNULL(sum(CASE WHEN b.relation_id =ta.id THEN 1 ELSE 0 END),0) from bug_info b where b.relation_type=1
        and `status`=3)+
        (select IFNULL(sum(CASE WHEN p.product_id =ta.id THEN 1 ELSE 0 END),0) from program p
        LEFT JOIN demand d ON d.relation_id = p.id and d.relation_type=2 where d.`status`=3)+
        (select IFNULL(sum(CASE WHEN p.product_id =ta.id THEN 1 ELSE 0 END),0) from program p
        LEFT JOIN bug_info b ON b.relation_id = p.id and b.relation_type=2 where b.`status`=3) as working,
        (select IFNULL(sum(CASE WHEN d.relation_id =ta.id THEN 1 ELSE 0 END),0) from demand d where d.relation_type=1
        and `status`=4)+
        (select IFNULL(sum(CASE WHEN b.relation_id =ta.id THEN 1 ELSE 0 END),0) from bug_info b where b.relation_type=1
        and `status`=4)+
        (select IFNULL(sum(CASE WHEN p.product_id =ta.id THEN 1 ELSE 0 END),0) from program p
        LEFT JOIN demand d ON d.relation_id = p.id and d.relation_type=2 where d.`status`=4)+
        (select IFNULL(sum(CASE WHEN p.product_id =ta.id THEN 1 ELSE 0 END),0) from program p
        LEFT JOIN bug_info b ON b.relation_id = p.id and b.relation_type=2 where b.`status`=4) as complete
        FROM product ta
        LEFT JOIN product_employee tb ON ta.id = tb.product_id
        WHERE 1=1
        <if test="isAdmin == 1">
            <if test="mySelf != null and mySelf != '' and mySelf == 1">
                AND (tb.account_id = #{accountId}
                OR ta.contact_account_id = #{accountId})
            </if>
        </if>
        <if test="isAdmin == 0">
            <if test="mySelf != null and mySelf != '' and mySelf == 0">
                AND (tb.account_id = #{accountId}
                OR ta.contact_account_id = #{accountId}
                OR ta.type=1)
            </if>
            <if test="mySelf != null and mySelf != '' and mySelf == 1">
                AND (tb.account_id = #{accountId}
                OR ta.contact_account_id = #{accountId})
            </if>
        </if>
        <if test="status != null and status != '' and status != -1 ">
            AND ta.status= #{status}
        </if>
        ORDER BY ta.create_time DESC
    </select>

    <select id="selectLikeList" resultMap="CountBaseResultMap">
        SELECT a.* from (SELECT *,to_pinyin(`name`) pinyin FROM product) a
        <where>
            <if test="name!=null and name!=''">
                a.name LIKE CONCAT('%', #{name, jdbcType=VARCHAR}, '%')
                or a.pinyin LIKE CONCAT('%', #{name, jdbcType=VARCHAR}, '%')
            </if>
        </where>
        ORDER BY a.modified_time DESC
        LIMIT 0, 20
    </select>

    <!-- 产品列表A-Z排序 -->
    <select id="getListSort" resultMap="BaseResultMap" parameterType="map">
        SELECT
        <include refid="Base_Column_List"/>
        FROM product
        <where>
            <if test="status != null and status != ''">
                `status`=#{status}
            </if>
        </where>
        ORDER by convert(substr(name,1,1) using 'GBK')
    </select>

    <select id="selectIdList" resultMap="LikeBaseResultMap">
        SELECT
            ID,
            NAME,
            type,
            status
        FROM product
        WHERE ID IN (${_parameter})
    </select>

    <select id="getNewCode" resultType="String">
        SELECT  code FROM product ORDER BY id DESC LIMIT 0,1
    </select>

    <select id="getListByLikeAnalyzingConditions" resultMap="BaseResultMap" parameterType="map">
        SELECT
        id
        FROM product
        <where>
            <if test=" analyzingConditions != null and analyzingConditions != '' and analyzingConditions != -1">
                analyzing_conditions like concat('%',#{analyzingConditions},'%')
            </if>

            <if test=" type == 1 ">
                and date_format(create_time,'%Y-%m')=date_format(now(),'%Y-%m')
            </if>

            <if test=" type == 2 ">
                and id in (select product_id from program
                            where program_status != 100 and program_status != 900 and program_status != 999)
            </if>
        </where>

    </select>

    <sql id="productHui_Where">
        <if test=" analyzingConditions != null and analyzingConditions != '' and analyzingConditions != -1">
            and p.analyzing_conditions like concat('%',#{analyzingConditions},'%')
        </if>
        <if test=" searchText != null and searchText != '' ">
            and (p.name like concat('%',#{searchText},'%')  or p.label_name like concat('%',#{searchText},'%'))
        </if>
        <if test=" label != null and label != '' and label != ',-1,'">
            and p.label like concat('%',#{label},'%')
        </if>
    </sql>

    <select id="productHui" resultMap="CountBaseResultMap" parameterType="map">
        <if test="status == 0">
            SELECT p.*,pro.program_status as programStatus FROM product p
            LEFT JOIN (SELECT id,product_id,program_status from program GROUP BY product_id) pro on pro.product_id=p.id
            where p.is_top=1   /** 置顶*/
            <include refid="productHui_Where"/>
        </if>
        <if test="status == 1">
            select p.*,pro.program_status as programStatus from product p
            LEFT JOIN (SELECT id,product_id,program_status from program GROUP BY product_id) pro on pro.product_id=p.id
            WHERE p.`status`=1 and p.is_top=0 /** 已上线*/
            <include refid="productHui_Where"/>
        </if>
        <if test="status != -1 and status != 0 and status != 1 and status != 3 and status != 4">
            select p.*,pro.program_status as programStatus from product p
            LEFT JOIN (SELECT id,product_id,program_status from program GROUP BY product_id) pro on pro.product_id=p.id
            WHERE p.`status`=2 and p.is_top=0 and pro.program_status!=100/** 9步法*/
            <if test="status != -1 and status != 0 and status != 1 and status != 3 and status != 4">
                and pro.program_status= #{status}
            </if>
            <include refid="productHui_Where"/>
        </if>
        <if test="status == 3">
            select p.*,pro.program_status as programStatus from product p
            LEFT JOIN (SELECT id,product_id,program_status from program GROUP BY product_id) pro on pro.product_id=p.id
            WHERE p.`status`=2 and p.is_top=0 and (pro.program_status=100 or pro.program_status is null)/** 待立项*/
            <include refid="productHui_Where"/>
        </if>
        <if test="status == 4">
            select p.*,pro.program_status as programStatus from product p
            LEFT JOIN (SELECT id,product_id,program_status from program GROUP BY product_id) pro on pro.product_id=p.id
            WHERE p.`status`=0 and p.is_top=0 /** 已下线*/
            <include refid="productHui_Where"/>
        </if>
        <if test="status == -1">
            SELECT p.*,pro.program_status as programStatus FROM product p
            LEFT JOIN (SELECT id,product_id,program_status from program GROUP BY product_id) pro on pro.product_id=p.id
            where p.is_top=1   /** 置顶*/
            <include refid="productHui_Where"/>
            UNION ALL

            select p.*,pro.program_status as programStatus from product p
            LEFT JOIN (SELECT id,product_id,program_status from program GROUP BY product_id) pro on pro.product_id=p.id
            WHERE p.`status`=1 and p.is_top=0 /** 已上线*/
            <include refid="productHui_Where"/>
            UNION ALL

            select p.*,pro.program_status as programStatus from product p
            LEFT JOIN (SELECT id,product_id,program_status from program GROUP BY product_id) pro on pro.product_id=p.id
            WHERE p.`status`=2 and p.is_top=0 and pro.program_status!=100/** 9步法*/
            <include refid="productHui_Where"/>
            UNION ALL

            select p.*,pro.program_status as programStatus from product p
            LEFT JOIN (SELECT id,product_id,program_status from program GROUP BY product_id) pro on pro.product_id=p.id
            WHERE p.`status`=2 and p.is_top=0 and (pro.program_status=100 or pro.program_status is null)/** 待立项*/
            <include refid="productHui_Where"/>

            /**UNION ALL
             select p.*,pro.program_status as programStatus from product p
            LEFT JOIN (SELECT id,product_id,program_status from program GROUP BY product_id) pro on pro.product_id=p.id
            WHERE p.`status`=0 and p.is_top=0 已下线*/
            <!--<include refid="productHui_Where"/>-->
        </if>
        ORDER BY is_top desc,field(`status`,1,2,0),programStatus desc,create_time desc
        LIMIT #{startRow},#{endRow}
    </select>

    <select id="productHuiNum" resultType="int" parameterType="map">
        <if test="status == 0">
            SELECT COUNT(1) FROM product p
            LEFT JOIN (SELECT id,product_id,program_status from program GROUP BY product_id) pro on pro.product_id=p.id
            where p.is_top=1   /** 置顶*/
            <include refid="productHui_Where"/>
        </if>
        <if test="status == 1">
            select COUNT(1) from product p
            LEFT JOIN (SELECT id,product_id,program_status from program GROUP BY product_id) pro on pro.product_id=p.id
            WHERE p.`status`=1 and p.is_top=0 /** 已上线*/
            <include refid="productHui_Where"/>
        </if>
        <if test="status != -1 and status != 0 and status != 1 and status != 3 and status != 4">
            select COUNT(1) from product p
            LEFT JOIN (SELECT id,product_id,program_status from program GROUP BY product_id) pro on pro.product_id=p.id
            WHERE p.`status`=2 and p.is_top=0 and pro.program_status!=100/** 9步法*/
            <if test="status != -1 and status != 0 and status != 1 and status != 3 and status != 4">
                and pro.program_status= #{status}
            </if>
            <include refid="productHui_Where"/>
        </if>
        <if test="status == 3">
            select COUNT(1) from product p
            LEFT JOIN (SELECT id,product_id,program_status from program GROUP BY product_id) pro on pro.product_id=p.id
            WHERE p.`status`=2 and p.is_top=0 and (pro.program_status=100 or pro.program_status is null)/** 待立项*/
            <include refid="productHui_Where"/>
        </if>
        <if test="status == 4">
            select COUNT(1) from product p
            LEFT JOIN (SELECT id,product_id,program_status from program GROUP BY product_id) pro on pro.product_id=p.id
            WHERE p.`status`=0 and p.is_top=0 /** 已下线*/
            <include refid="productHui_Where"/>
        </if>
        <if test="status == -1">
            SELECT COUNT(1) from product p
            where 1=1 and `status`!=0
            <include refid="productHui_Where"/>
        </if>
    </select>

    <select id="newProductHui" resultMap="CountBaseResultMap" parameterType="map">
        select * from (
        SELECT p.*,
        CASE
        WHEN pro.program_status = '100' THEN  '100'
        WHEN pro.program_status = '110' THEN  '110'
        WHEN pro.program_status = '120' THEN  '120'
        WHEN pro.program_status = '130' THEN  '130'
        WHEN pro.program_status = '140' THEN  '140'
        WHEN pro.program_status = '150' THEN  '150'
        WHEN pro.program_status = '160' THEN  '160'
        WHEN pro.program_status = '170' THEN  '170'
        WHEN pro.program_status = '180' THEN  '180'
        WHEN pro.program_status = '190' THEN  '190'
        WHEN pro.program_status = '193' THEN  '193'
        WHEN pro.program_status = '195' THEN  '195'
        WHEN pro.program_status = '900' THEN  '900'
        WHEN pro.program_status = '999' THEN  '999'
        ELSE '100' END as programStatus
        FROM product p
        LEFT JOIN (SELECT id,product_id,program_status from program GROUP BY product_id) pro on pro.product_id=p.id
        ) a
        <where>
            a.`status`!=0
            <if test=" analyzingConditions != null and analyzingConditions != '' and analyzingConditions != -1">
                AND a.analyzing_conditions like concat('%',#{analyzingConditions},'%')
            </if>
            <if test=" analyzingConditionsList != null and analyzingConditionsList != '' ">
                AND
                <foreach item="item" index="index" collection="analyzingConditionsList" open="(" separator="or" close=")">
                    a.analyzing_conditions like concat('%',#{item},'%')
                </foreach>
            </if>
            <if test=" searchText != null and searchText != '' ">
                and (a.name like concat('%',#{searchText},'%')  or a.label_name like concat('%',#{searchText},'%'))
            </if>
            <if test=" labels != null ">
                AND
                <foreach item="item" index="index" collection="labels" open="(" separator="or" close=")">
                    a.label like concat('%',#{item},'%')
                </foreach>
            </if>
            <if test=" productStatus != null ">
                AND (
                <foreach item="item" index="index" collection="productStatus" open="(" separator="or" close=")">
                    a.programStatus = #{item}
                </foreach>
                <if test=" status != null and status != '' ">
                    or a.status = #{status}
                </if>
                )
            </if>
        </where>
        ORDER BY a.is_top desc,field(a.`status`,1,2,0),a.programStatus desc,a.create_time desc
    </select>

    <select id="getCountByLabelId" resultType="int" >
        select COUNT(1) from product WHERE label LIKE  concat('%',#{label},'%')
    </select>

    <update id="updateProductUrl" parameterType="com.longfor.itserver.entity.Product">
        update product set
        pc_url = #{pcUrl},h5_url = #{h5Url},ios_url = #{iosUrl},android_url = #{androidUrl},
        windows_url = #{windowsUrl},mac_url = #{macUrl},ios_version = #{iosVersion},
        android_version = #{androidVersion},ios_modified_time = #{iosModifiedTime},
        android_modified_time = #{androidModifiedTime},ios_url_test = #{iosUrlTest},
        android_url_test = #{androidUrlTest},ios_version_test = #{iosVersionTest},
        android_version_test = #{androidVersionTest},ios_modified_time_test = #{iosModifiedTimeTest},
        android_modified_time_test = #{androidModifiedTimeTest}
        where id = #{id}
    </update>
</mapper>